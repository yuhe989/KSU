name: Build MKSU SUSFS For OPAce2
on:
  workflow_dispatch: 
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "build"
         git config --global user.email "3436378798@qq.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo å’Œ sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8475 -m oneplus_11r_v.xml --depth=1
         repo sync         
         find kernel_platform/common/android/ -name "abi_gki_protected_exports_*" -delete
         find kernel_platform/msm-kernel/android/ -name "abi_gki_protected_exports_*" -delete
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i '$s|echo "\$res"|echo "$res-Mortis"|' kernel_platform/common/scripts/setlocalversion            
         sed -i '$s|echo "\$res"|echo "$res-Mortis"|' kernel_platform/msm-kernel/scripts/setlocalversion            

      - name: Set up MKSU
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/5ec1cff/KernelSU/refs/heads/main/kernel/setup.sh" | bash -
         cd KernelSU       
         #git revert -m 1 $(git log --grep="remove devpts hook" --pretty=format:"%h") -n
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
        
      - name: Set up SUSFS
        run: |
           cd kernel_workspace/kernel_platform
           git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android12-5.10
           git clone https://github.com/TheWildJames/kernel_patches.git
           cp ./kernel_patches/mksu/mksu_susfs.patch ./KernelSU/
           cp ./kernel_patches/mksu/fix.patch ./KernelSU/
           cp ./kernel_patches/hooks/new_hooks.patch ./common
           cp ./susfs4ksu/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch ./common/
           cp ./susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU/
           cp ./kernel_patches/69_hide_stuff.patch ./common
           cp ./susfs4ksu/kernel_patches/fs/* common/fs/
           cp ./susfs4ksu/kernel_patches/include/linux/* common/include/linux/
           
           # Apply patches
           cd KernelSU
           patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
           cd ../common
           patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch || true
           cd ../KernelSU
           patch -p1 --forward < mksu_susfs.patch || true
           patch -p1 --forward < fix.patch || true
           curl -O https://raw.githubusercontent.com/TanakaLun/Action-Kernel/refs/heads/main/vfs_fix.patch
           #curl -O https://raw.githubusercontent.com/ShirkNeko/KernelSU/16f934f4aaa8301939d73f969a421e90b2e92c8e/mksu_susfs_vfs_fix.sh
           patch -p1 --forward < vfs_fix.patch || true
           cd ../common
           patch -p1 -F 3 < 69_hide_stuff.patch
           git add -A && git commit -a -m "BUILD Kernel"
           cd ..
           cd ./msm-kernel && git add -A && git commit -a -m "BUILD Kernel"
           cd ..
           
      - name: Apply new hook and add configuration
        run: |
            cd kernel_workspace/kernel_platform
            echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            sed -i '2s/check_defconfig//' ./common/build.config.gki
            # Apply New Hook Patch
            cd ./common
            patch -p1 -F 3 < new_hooks.patch
         
      - name: Build kernel
        run: |
         cd kernel_workspace
         LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh waipio gki
         
      - name: Make AnyKernel3
        run: |
         git clone https://github.com/TanakaLun/AnyKernel3 --depth=1
         rm -rf ./AnyKernel3/.git
         cp kernel_workspace/kernel_platform/out/msm-waipio-waipio-gki/dist/Image ./AnyKernel3/

      - name: Download Latest SUSFS Module
        run: |
         wget https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
         cp ksu_module_susfs_1.5.2+.zip ./AnyKernel3/
          
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: OP11R_MKSU_${{ env.KSUVER }}
         path: ./AnyKernel3/*
